
DROP PROCEDURE [dbo].[sp_EBP_Output_DataFile_einvoice]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[sp_EBP_Output_DataFile_einvoice]
	@FILEID			NVARCHAR(100),
	@OutputEBP		NVARCHAR(50)

AS
BEGIN
	DECLARE @SQL varchar(max)
	DECLARE @CMD VARCHAR(4000)
	DECLARE @DelCMD VARCHAR(4000)
	DECLARE @HEADERCMD VARCHAR(4000)
	DECLARE @Combine VARCHAR(4000)

	DECLARE @EBPDC_HAS_HEADER		BIT
	DECLARE @EBPDC_OUTPUT_PATH		NVARCHAR(100)
	DECLARE @EBPDC_OUTPUT_FILEID	NVARCHAR(100)=@OutputEBP
	DECLARE @EBPDC_OUTPUT_TYPE		NVARCHAR(10)
	DECLARE @EBPDC_PRINTOUT_REQUIRED	BIT
	DECLARE @EBPDC_PRINTOUT_SOURCE_PATH	NVARCHAR(255)
	DECLARE @EBPDC_PRINTOUT_SOURCE_SUBFOLER		NVARCHAR(50)
	DECLARE @EBPDC_PRINTOUT_FILEID				NVARCHAR(50)
	DECLARE @EBPDC_PRINTOUT_FILEID_DATE			DATETIME
	DECLARE @EBPDC_PRINTOUT_DESTINATION_PATH	NVARCHAR(255)

	SELECT 
		@EBPDC_HAS_HEADER=EBPDC_HAS_HEADER,
		@EBPDC_OUTPUT_PATH=EBPDC_OUTPUT_PATH,
		@EBPDC_OUTPUT_TYPE=EBPDC_OUTPUT_TYPE,
		@EBPDC_PRINTOUT_REQUIRED=EBPDC_PRINTOUT_REQUIRED,
		@EBPDC_PRINTOUT_SOURCE_PATH=EBPDC_PRINTOUT_SOURCE_PATH,
		--@EBPDC_PRINTOUT_SOURCE_SUBFOLER=EBPDC_PRINTOUT_SOURCE_SUBFOLER,
		@EBPDC_PRINTOUT_DESTINATION_PATH=EBPDC_PRINTOUT_DESTINATION_PATH,
		@EBPDC_PRINTOUT_FILEID=EBPDC_PRINTOUT_FILEID
	FROM tblEBPDataConfig WHERE EBPDC_FILEID=@FILEID




	IF OBJECT_ID('tempdb..#eBP_EBPDC_PRINTOUT_SOURCE_PATH') IS NOT NULL
		DROP TABLE #eBP_EBPDC_PRINTOUT_SOURCE_PATH
	CREATE TABLE #eBP_EBPDC_PRINTOUT_SOURCE_PATH	(xEBPDC_PRINTOUT_SOURCE_PATH NVARCHAR(1000))
			
	IF ISNULL(@EBPDC_PRINTOUT_SOURCE_PATH,'')=''
	BEGIN
		INSERT INTO #eBP_EBPDC_PRINTOUT_SOURCE_PATH (xEBPDC_PRINTOUT_SOURCE_PATH)
		SELECT EBPDF_FILTER_VALUE_LIST FROM tblEBPDataFilter
			WHERE EBPDF_FILEID = @FILEID AND EBPDF_FILTER_KEY = 'EBPDC_PRINTOUT_SOURCE_PATH'
	END
	ELSE
		INSERT INTO #eBP_EBPDC_PRINTOUT_SOURCE_PATH (xEBPDC_PRINTOUT_SOURCE_PATH) SELECT @EBPDC_PRINTOUT_SOURCE_PATH

SELECT * FROM 
#eBP_EBPDC_PRINTOUT_SOURCE_PATH

	/*SET @CMD = 'del ' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + '*.csv'
	exec xp_cmdshell @CMD

select * INTO #T  from tempdb.sys.columns 
where object_id =
object_id('tempdb..#eBP_Work');

DECLARE @cols AS NVARCHAR(MAX)

select @cols = STUFF((SELECT ',' + QUOTENAME(NAME) 
                    from #T
 
                    order by COLUMN_id
            FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

SET @cols = REPLACE(REPLACE(@COLS,'[',''),']','')

SET @SQL = 'IF object_id(' + '''.dbo.' + @EBPDC_OUTPUT_FILEID + 'Header'') IS NOT NULL DROP TABLE ' + @EBPDC_OUTPUT_FILEID + 'Header'
EXEC(@SQL)

SET @SQL = 'CREATE TABLE ' + @EBPDC_OUTPUT_FILEID + 'Header (FILE_HEADER NVARCHAR(MAX))'
EXEC(@SQL)

SET @SQL = 'INSERT INTO ' + @EBPDC_OUTPUT_FILEID + 'Header (FILE_HEADER) select ''' + @cols + ''''
EXEC(@SQL)

-- GET FILE HEADER LABEL END --
-- PREPARE COMMAND TO EXPORT DATA TO CSV --

DECLARE @EBPDC_HEADER			NVARCHAR(1000) = 'select * from ' + DB_NAME() + '.dbo.'+ @EBPDC_OUTPUT_FILEID + 'Header'
SET @HEADERCMD =
'bcp "' + @EBPDC_HEADER + '" QUERYOUT "' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + 'Header.csv" -S ' + @@SERVERNAME + ' -T -t , -w'

DECLARE @EBPDC_QUERY			NVARCHAR(1000) = 'select * from ' + DB_NAME() + '.dbo.'+ @EBPDC_OUTPUT_FILEID
SET @CMD =
'bcp "' + @EBPDC_QUERY + '" QUERYOUT "' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + 'Data.csv" -S ' + @@SERVERNAME + ' -T -t , -w'
SET @Combine = 'COPY '	+ '"' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + 'Header.csv' + '"' + '+' 
						+ '"' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + 'Data.csv' + '"' + ' '
						+ '"' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + '.csv' + '"'

DECLARE @UTF8 VARCHAR(4000)
-- Change encoding to UTF-8 with PowerShell 
SET @UTF8 = 'powershell -Command "Get-Content ' + @EBPDC_OUTPUT_PATH+@EBPDC_OUTPUT_FILEID + '.csv' + ' -Encoding Unicode | Set-Content -Encoding UTF8 '+ @EBPDC_OUTPUT_PATH+@EBPDC_OUTPUT_FILEID + 'U.csv' + '"';

IF ISNULL(@EBPDC_OUTPUT_PATH,'')<>''
BEGIN
	IF ISNULL(@EBPDC_HAS_HEADER,0)=1
	BEGIN

		-- Run the two export queries - first for the header, then for the data
		SELECT @HEADERCMD as '@HEADERCMD'
		exec xp_cmdshell @HEADERCMD 
		
		SELECT @CMD as 'CMD'
		exec xp_cmdshell @CMD
		 
		-- Combine the two files into a single file
		SELECT @Combine AS 'COMBINED'
		exec xp_cmdshell @Combine
		
		SET @CMD = 'del ' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + '*Header.csv '  + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + '*Data.csv'
		exec xp_cmdshell @CMD

	END 
	ELSE
	BEGIN
		PRINT 'xp_cmdshell @@CMD NO HEADER'
		SET @CMD =
		'bcp "' + @EBPDC_QUERY + '" QUERYOUT "' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + '.csv" -S ' + @@SERVERNAME + ' -T -t , -w'
		exec xp_cmdshell @CMD
	END

	EXEC xp_cmdshell @UTF8; 

	SET @CMD = 'del ' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + '.csv '
	exec xp_cmdshell @CMD
	SET @CMD = 'RENAME ' + @EBPDC_OUTPUT_PATH + @EBPDC_OUTPUT_FILEID + 'U.csv ' + @EBPDC_OUTPUT_FILEID + '.csv'
	exec xp_cmdshell @CMD
END */ -- commented on 18 Jan 
  
	IF ISNULL(@EBPDC_PRINTOUT_REQUIRED,'1')='1'
	BEGIN
		DECLARE @PRINTOUT_FILEID	NVARCHAR(255)

		SET @sql = 'ALTER TABLE ' + @EBPDC_OUTPUT_FILEID + ' ADD PRINTOUT_DESTINATION_PATH VARCHAR(255)'
		EXEC(@sql)

		IF OBJECT_ID('tempdb..##eBP_Printout') IS NOT NULL
			DROP TABLE ##eBP_Printout
    
		set @SQL = 'SELECT ' + @EBPDC_PRINTOUT_FILEID + ' into ##eBP_Printout from #eBP_Work'
		EXEC(@SQL)

		DECLARE @Xcopy_result TABLE (Line NVARCHAR(512))
		DECLARE @Xcopy_result_1 nvarchar(max)
		DECLARE @Xcopy_loop bit

		Declare PRT_cur Cursor LOCAL STATIC READ_ONLY FORWARD_ONLY For
		SELECT * from ##eBP_Printout
		Open PRT_cur 
			Fetch Next From PRT_cur Into @PRINTOUT_FILEID,@EBPDC_PRINTOUT_FILEID_DATE
		 While @@Fetch_Status = 0
		 BEGIN

				DECLARE @PKEY_COL NVARCHAR(50) = LEFT(@EBPDC_PRINTOUT_FILEID, CHARINDEX( ',', @EBPDC_PRINTOUT_FILEID, 1) - 1)
	
--				DECLARE @SUB_FOLDER_DATE VARCHAR(20) = CONVERT(VARCHAR,@EBPDC_PRINTOUT_FILEID_DATE,112)
				DECLARE @SUB_FOLDER_DATE VARCHAR(20) =	SUBSTRING (CONVERT(VARCHAR,@EBPDC_PRINTOUT_FILEID_DATE,112),1,4) + 
														SUBSTRING (CONVERT(VARCHAR,@EBPDC_PRINTOUT_FILEID_DATE,112),5,2) + 
														SUBSTRING (CONVERT(VARCHAR,@EBPDC_PRINTOUT_FILEID_DATE,112),7,2)  
				
				--DECLARE @SUB_FOLDER NVARCHAR(50)=CASE WHEN @EBPDC_PRINTOUT_SOURCE_SUBFOLER='YYYYMMDD' THEN @SUB_FOLDER_DATE ELSE
				--									CASE WHEN @EBPDC_PRINTOUT_SOURCE_SUBFOLER='YYYYMM' THEN LEFT(@SUB_FOLDER_DATE,6) ELSE ' ' END END
	

	
	UPDATE #eBP_EBPDC_PRINTOUT_SOURCE_PATH 
	SET xEBPDC_PRINTOUT_SOURCE_PATH = REPLACE(xEBPDC_PRINTOUT_SOURCE_PATH, 'YYYYMM', LEFT(CONVERT(varchar, @EBPDC_PRINTOUT_FILEID_DATE,112),6));
	
	
	DECLARE @SUB_FOLDER NVARCHAR(50)
	
				SET @Xcopy_loop = 1
				Declare Path_cur Cursor LOCAL STATIC READ_ONLY FORWARD_ONLY For
				SELECT * from #eBP_EBPDC_PRINTOUT_SOURCE_PATH
				Open Path_cur 
					Fetch Next From Path_cur Into @EBPDC_PRINTOUT_SOURCE_PATH
					While @@Fetch_Status = 0 AND @Xcopy_loop = 1
					BEGIN
					
						SET @CMD = 'XCOPY ' + '"' + @EBPDC_PRINTOUT_SOURCE_PATH +'*'+ 
							 @PRINTOUT_FILEID + '*' + @SUB_FOLDER_DATE + '*.pdf"' + ' ' + '"' + @EBPDC_PRINTOUT_DESTINATION_PATH + '" ' + ' /S /Y'
						
						PRINT @CMD
						DELETE FROM @Xcopy_result
						INSERT INTO @Xcopy_result exec xp_cmdshell @CMD
						select @Xcopy_result_1=Line from @Xcopy_result where Line like '%' + @PRINTOUT_FILEID + '%'
						
						print @Xcopy_result_1
						SET @Xcopy_loop=CASE WHEN @Xcopy_result_1 NOT LIKE 'File not found%' THEN 0 else 1 END 
						
						print @Xcopy_loop
						SET @sql = 'UPDATE ' + @EBPDC_OUTPUT_FILEID + ' SET PRINTOUT_DESTINATION_PATH = ''' + @Xcopy_result_1 + ''' WHERE ' + @PKEY_COL +
									'=''' + @PRINTOUT_FILEID + ''''
						
						print @sql
						EXEC(@sql)
						Fetch Next From Path_cur Into @EBPDC_PRINTOUT_SOURCE_PATH
					
					END
					Close Path_cur
					DeAllocate Path_cur 
				
			Fetch Next From PRT_cur Into @PRINTOUT_FILEID,@EBPDC_PRINTOUT_FILEID_DATE
		END
		Close PRT_cur
		DeAllocate PRT_cur 
	
		IF OBJECT_ID('tempdb..##eBP_Printout') IS NOT NULL
			DROP TABLE ##eBP_Printout 		
	END
END

	

GO


